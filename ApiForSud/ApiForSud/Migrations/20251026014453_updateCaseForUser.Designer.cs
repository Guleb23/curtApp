// <auto-generated />
using System;
using ApiForSud.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiForSud.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20251026014453_updateCaseForUser")]
    partial class updateCaseForUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.Case", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Applicant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfCurt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfResult")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Defendant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfCurt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomerOfCase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultOfCurt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.CurtInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfResult")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfSession")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Employee")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfCurt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultOfIstance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("CurtInstances");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.Case", b =>
                {
                    b.HasOne("ApiForSud.Models.DatabaseModels.User", "User")
                        .WithMany("UserCases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.CurtInstance", b =>
                {
                    b.HasOne("ApiForSud.Models.DatabaseModels.Case", "Case")
                        .WithMany("CurtInstances")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.Case", b =>
                {
                    b.Navigation("CurtInstances");
                });

            modelBuilder.Entity("ApiForSud.Models.DatabaseModels.User", b =>
                {
                    b.Navigation("UserCases");
                });
#pragma warning restore 612, 618
        }
    }
}
